
services:
  network-scanner:
    build: .
    container_name: network_scanner
    restart: unless-stopped
    network_mode: host
    privileged: true  # Needed for nmap and network scanning
    
    environment:
      # AI Configuration
      - AI_ENABLED=${AI_ENABLED:-false}
      - AI_API_KEY=${AI_API_KEY:-}
      - AI_PROVIDER=${AI_PROVIDER:-openai}
      
      # Network Configuration
      - DEFAULT_NETWORK=${DEFAULT_NETWORK:-192.168.1.0/24}
      - PREFERRED_INTERFACE=${PREFERRED_INTERFACE:-}
      
      # Scan Settings
      - SCAN_TIMEOUT=${SCAN_TIMEOUT:-300}
      - TOP_PORTS=${TOP_PORTS:-200}
      - AUTO_REFRESH=${AUTO_REFRESH:-true}
      - VIEW_MODE=${VIEW_MODE:-table}
      
      # Flask Configuration
      - FLASK_ENV=${FLASK_ENV:-production}
      - FLASK_DEBUG=${FLASK_DEBUG:-false}
      
      # Security
      - SECRET_KEY=${SECRET_KEY:-changeme_in_production}
      
    volumes:
      # Persistent storage for database and cache files  
      - ./network_scanner.db:/app/network_scanner.db:rw
      - ./devices.json:/app/devices.json:rw
      - ./config.json:/app/config.json:rw
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/results"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
      
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
